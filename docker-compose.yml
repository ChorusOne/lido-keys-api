version: '3.7'

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_SUPERUSER}
      - POSTGRES_PASSWORD=${DB_SUPERUSER_PASSWORD}
      - DB_KAPI_USER=${DB_KAPI_USER}
      - DB_KAPI_USER_PASSWORD=${DB_KAPI_USER_PASSWORD}
    volumes:
      - ./.volumes/pgdata-${CHAIN_ID}/:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  keys_api:
    build: ./
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - CORS_WHITELIST_REGEXP=${CORS_WHITELIST_REGEXP}
      - GLOBAL_THROTTLE_TTL=${GLOBAL_THROTTLE_TTL}
      - GLOBAL_THROTTLE_LIMIT=${GLOBAL_THROTTLE_LIMIT}
      - GLOBAL_CACHE_TTL=${GLOBAL_CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - PROVIDERS_URLS=${PROVIDERS_URLS}
      - CL_API_URLS=${CL_API_URLS}
      - CHAIN_ID=${CHAIN_ID}
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - DB_HOST=db
      - DB_USER=${DB_KAPI_USER}
      - DB_PASSWORD=${DB_KAPI_USER_PASSWORD}
      - VALIDATOR_REGISTRY_ENABLE=${VALIDATOR_REGISTRY_ENABLE}
      - MIKRO_ORM_DISABLE_FOREIGN_KEYS=${MIKRO_ORM_DISABLE_FOREIGN_KEYS}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
